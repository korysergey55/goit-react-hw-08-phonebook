{"version":3,"sources":["components/sectipon/Section.js","components/servises/api.js","redux/contactForm/contactFormActions.js","components/contactList/ContactList.js","redux/contactForm/contactFormOperetion.js","components/loader/Loader.js","redux/contactForm/contactFormSelectors.js","components/contactForm/ContactForm.js","components/filter/Filter.js","routes/mainRouters.js","pages/ContactFormPage.js","pages/ContactListPage.js","components/header/headerItem/HeaderItem.js","components/header/HeaderStyled.js","components/header/Header.js","components/App.js","redux/contactForm/contactFormReducer.js","redux/rootReducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/sectipon/Section.module.css"],"names":["Section","title","children","className","styles","sectionTitle","defaultProps","BASE_URL","getAllContactsApi","a","axios","get","response","console","log","addNewContactApi","newContact","post","deleteContactApi","id","delete","getAllContacts","createAction","getAllRequestError","submitNewContact","submitNewContactRequestError","handleDelete","handleDeleteRequestError","setLoader","filterContacts","getNormolizeContacts","state","formattedContacts","contacts","filter","toLowerCase","trim","items","contact","name","includes","mapDispatchToProps","dispatch","connect","ownProps","mainContainer","ulContainer","map","newContactName","number","type","btn","onClick","Loader","color","height","width","timeout","contactsSelector","filterSelector","loaderSelector","loader","initialState","createSelector","product","ContactForm","saveInputValueToState","evt","setState","target","value","handleSubmitForm","preventDefault","findDuplicate","props","addContactOperation","isDublicate","some","alert","this","getAllContactsOperation","mainForm","onSubmit","inputContainer","labelName","onChange","inputName","pattern","required","placeholder","buttonAddContact","Component","data","htmlFor","event","mainRoutes","path","component","exact","isLink","isPrivate","isRestricted","HeaderItem","route","to","activeClassName","HeaderConteinerStyled","styled","header","Header","App","rey","itemsReducer","createReducer","action","payload","filterItemsReducer","_","loaderReducer","errorReducer","contactFormCartReduser","combineReducers","error","rootReducer","contactFormReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2b4c82c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n return (\r\n  <section>\r\n   <h2 className={styles.sectionTitle}>{title}</h2>\r\n   {children}\r\n  </section>\r\n );\r\n};\r\n\r\nSection.defaultProps = {\r\n title: \"\",\r\n};\r\n\r\n Section.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n };\r\nexport default Section;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:3000/contacts\";\r\n\r\nexport const getAllContactsApi = async () => {\r\n try {\r\n  const response = await axios.get(BASE_URL);\r\n  return response;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const addNewContactApi = async (newContact) => {\r\n try {\r\n  const response = await axios.post(BASE_URL, newContact);\r\n  return response;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\nexport const deleteContactApi = async (id) => {\r\n try {\r\n  const response = axios.delete(`${BASE_URL}/${id}`);\r\n  return response;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n\r\n\r\nexport const filterContactApi = async (id) => {\r\n try {\r\n  const response = axios.get(`${BASE_URL}/${id}`);\r\n  return response;\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n};\r\n","//============================= Redux Toolkit ================================\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst getAllContacts = createAction(\"contact/getAllContacts\");\r\nconst getAllRequestError = createAction(\"contact/getAllRequestError\");\r\nconst submitNewContact = createAction(\"contact/submitNewContact\");\r\nconst submitNewContactRequestError = createAction( \"contact/submitNewContactRequestError\");\r\nconst handleDelete = createAction(\"contact/handleDelete\");\r\nconst handleDeleteRequestError = createAction( \"contact/handleDeleteRequestError\");\r\nconst setLoader = createAction(\"contact/setLoader\");\r\nconst filterContacts = createAction(\"contact/filter\");\r\n\r\nexport {\r\n getAllContacts,\r\n getAllRequestError,\r\n submitNewContact,\r\n submitNewContactRequestError,\r\n handleDelete,\r\n handleDeleteRequestError,\r\n filterContacts,\r\n setLoader,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContactOperation } from \"../../redux/contactForm/contactFormOperetion\";\r\n\r\n\r\nconst ContactList = ({ contacts, handleDelete }) => {\r\n return (\r\n  <div className={styles.mainContainer}>\r\n   <ul className={styles.ulContainer}>\r\n    {contacts.map((contact) => (\r\n     <li className={styles.newContact} key={contact.id}>\r\n      <p className={styles.newContactName}>\r\n       {contact.name} : {contact.number}\r\n      </p>\r\n      <button\r\n       type=\"button\"\r\n       className={styles.btn}\r\n       onClick={() => handleDelete(contact.id)}\r\n      >\r\n       Delete\r\n      </button>\r\n     </li>\r\n    ))}\r\n   </ul>\r\n  </div>\r\n );\r\n};\r\n\r\nContactList.propTypes = {\r\n filteredContacts: PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n   id: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   number: PropTypes.string.isRequired,\r\n  })\r\n ),\r\n handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getNormolizeContacts = (state) => {\r\n const formattedContacts = state.contacts.filter.toLowerCase().trim();\r\n const filteredContacts = state.contacts.items.filter((contact) =>\r\n  contact.name.toLowerCase().includes(formattedContacts)\r\n );\r\n return filteredContacts;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n contacts: getNormolizeContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n handleDelete: deleteContactOperation,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import {\r\n getAllContactsApi,\r\n addNewContactApi,\r\n deleteContactApi,\r\n } from \"../../components/servises/api\";\r\n\r\nimport {\r\n getAllContacts,\r\n getAllRequestError,\r\n submitNewContact,\r\n submitNewContactRequestError,\r\n handleDelete,\r\n handleDeleteRequestError,\r\n setLoader,\r\n} from \"./contactFormActions\";\r\n\r\nexport const getAllContactsOperation = (contact) => async (dispatch) => {\r\n try {\r\n  dispatch(setLoader());\r\n  const response = await getAllContactsApi(contact);\r\n  dispatch(getAllContacts(response.data));\r\n  dispatch(setLoader());\r\n } catch (error) {\r\n  dispatch(getAllRequestError(error));\r\n }\r\n};\r\n\r\nexport const addContactOperation = (contact) => async (dispatch) => {\r\n try {\r\n  dispatch(setLoader());\r\n  const response = await addNewContactApi(contact);\r\n  dispatch(submitNewContact(response.data));\r\n  dispatch(setLoader());\r\n } catch (error) {\r\n dispatch(submitNewContactRequestError(error));\r\n }\r\n};\r\n\r\nexport const deleteContactOperation = (id) => async (dispatch) => {\r\n try {\r\n  dispatch(setLoader());\r\n  await deleteContactApi(id);\r\n  dispatch(handleDelete(id));\r\n  dispatch(setLoader());\r\n } catch (error) {\r\n  dispatch(handleDeleteRequestError(error));\r\n }\r\n};\r\n","import React from 'react';\r\nimport Load from \"react-loader-spinner\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n     <div className=\"loader\">\r\n      <Load\r\n       type=\"Circles\"\r\n       color=\"#05a8df\"\r\n       height={70}\r\n       width={70}\r\n       timeout={1000}\r\n      />\r\n     </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import {createSelector} from '@reduxjs/toolkit';\r\n\r\nexport const contactsSelector = (state) =>  state.contacts.items;\r\nexport const filterSelector = (state) => state.contacts.filter;\r\nexport const loaderSelector = (state) => state.contacts.loader;\r\n\r\nexport const getfilteredContactsSelector = createSelector(\r\n [contactsSelector, filterSelector],\r\n (contacts, filter) =>\r\n  contacts.filter((product) =>\r\n   product.name.toLowerCase().includes(filter.toLowerCase())\r\n  )\r\n);","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport Loader from \"../loader/Loader\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n addContactOperation,\r\n getAllContactsOperation,\r\n} from \"../../redux/contactForm/contactFormOperetion\";\r\nimport {\r\n contactsSelector,\r\n loaderSelector,\r\n} from \"../../redux/contactForm/contactFormSelectors\";\r\n\r\nconst initialState = {\r\n name: \"\",\r\n number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n static propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n };\r\n\r\n state = {\r\n  ...initialState,\r\n };\r\n\r\n componentDidMount() {\r\n  this.props.getAllContactsOperation();\r\n }\r\n saveInputValueToState = (evt) => {\r\n  this.setState({\r\n   [evt.target.name]: evt.target.value,\r\n  });\r\n };\r\n\r\n handleSubmitForm = (evt) => {\r\n  evt.preventDefault();\r\n\r\n  if (this.findDuplicate(this.state.name)) {\r\n   this.props.addContactOperation({ ...this.state });\r\n  }\r\n  this.setState({ ...initialState });\r\n };\r\n\r\n findDuplicate = (newContactName) => {\r\n  const isDublicate = this.props.contacts.some(\r\n   (contact) => contact.name === newContactName\r\n  );\r\n  if (!newContactName) {\r\n   alert(\"The field cannot be empty!\");\r\n   return false;\r\n  }\r\n  if (isDublicate) {\r\n   alert(\"This Name already exist!\" + newContactName);\r\n   return false;\r\n  }\r\n  return true;\r\n };\r\n\r\n render() {\r\n  return (\r\n   <>\r\n    {this.props.loader && <Loader/>}\r\n    <form className={styles.mainForm} onSubmit={this.handleSubmitForm}>\r\n     <div className={styles.inputContainer}>\r\n      <label className={styles.labelName}>Name</label>\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       type=\"text\"\r\n       name=\"name\"\r\n       className={styles.inputName}\r\n       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n       placeholder=\"Enter Name\"\r\n      ></input>\r\n     </div>\r\n\r\n     <div className={styles.inputContainer}>\r\n      <label className={styles.labelName}>Number</label>\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       type=\"tel\"\r\n       name=\"number\"\r\n       className={styles.inputName}\r\n       pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n       title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n       required\r\n      />\r\n     </div>\r\n     <button type=\"submit\" className={styles.buttonAddContact}>\r\n      Add contact\r\n     </button>\r\n    </form>\r\n   </>\r\n  );\r\n }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n contacts: contactsSelector(state),\r\n loader: loaderSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n addContactOperation,\r\n getAllContactsOperation,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/contactForm/contactFormActions\";\r\nimport { filterSelector } from \"../../redux/contactForm/contactFormSelectors\";\r\n\r\nconst Filter = ({ filter, filterContacts }) => {\r\n\r\n const onHandleChange = (event) => {\r\n  filterContacts(event.target.value);\r\n };\r\n\r\n return (\r\n  <div className={styles.mainContainer}>\r\n   <div className={styles.inputContainer}>\r\n    <label className={styles.labelName} htmlFor=\"filter\">\r\n     Find contact by name\r\n    </label>\r\n    <input\r\n     onChange={onHandleChange}\r\n     type=\"text\"\r\n     name=\"filter\"\r\n     id=\"filter\"\r\n     value={filter}\r\n     className={styles.inputName}\r\n    ></input>\r\n   </div>\r\n  </div>\r\n );\r\n};\r\n\r\nFilter.propTypes = {\r\n filter: PropTypes.string,\r\n filterContacts: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n filter: filterSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","\r\nimport ContactFormPage from '../pages/ContactFormPage';\r\nimport ContactListPage from \"../pages/ContactListPage\";\r\n\r\n\r\nexport const mainRoutes = [\r\n {\r\n  name: \"Phonebook\",\r\n  path: \"/\",\r\n  component: ContactFormPage,\r\n  exact: true,\r\n  isLink: true,\r\n  isPrivate: false,\r\n  isRestricted: false,\r\n },\r\n {\r\n  name: \"Contacts\",\r\n  path: \"/contacts\",\r\n  component: ContactListPage,\r\n  exact: true,\r\n  isLink: true,\r\n  isPrivate: false,\r\n  isRestricted: false,\r\n },\r\n {\r\n  name: \"Registration\",\r\n  path: \"/registration\",\r\n  component: \"\",\r\n  exact: true,\r\n  isLink: true,\r\n  isPrivate: false,\r\n  isRestricted: false,\r\n },\r\n {\r\n  name: \"Login\",\r\n  path: \"/login\",\r\n  component: \"\",\r\n  exact: true,\r\n  isLink: true,\r\n  isPrivate: false,\r\n  isRestricted: false,\r\n },\r\n];","import React from 'react';\r\nimport ContactForm from '../components/contactForm/ContactForm';\r\nconst ContactFormPage = () => {\r\n    return (\r\n        <ContactForm/>\r\n    );\r\n}\r\n\r\nexport default ContactFormPage;","import React from \"react\";\r\nimport ContactList from \"../components/contactList/ContactList\";\r\nimport Filter from \"../components/filter/Filter\";\r\n\r\nconst ContactListPage = () => {\r\n return (\r\n  <>\r\n   <Filter />\r\n   <ContactList />\r\n  </>\r\n );\r\n};\r\n\r\nexport default ContactListPage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst HeaderItem = ({ route }) => {\r\n return (\r\n  <>\r\n   <li key={route.path}>\r\n    <NavLink\r\n     to={route.path}\r\n     exact={route.exact}\r\n     className=\"nawLink\"\r\n     activeClassName=\"nawLinkActive\"\r\n    >\r\n     {route.name}\r\n    </NavLink>\r\n   </li>\r\n  </>\r\n );\r\n};\r\n\r\nexport default HeaderItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderConteinerStyled = styled.header`\r\n .headerConteiner {\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  list-style: none;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n }\r\n .nawLink {\r\n  text-decoration: none;\r\n  color: black;\r\n }\r\n .nawLinkActive {\r\n  color: green;\r\n }\r\n`;","import React from \"react\";\r\nimport { mainRoutes } from \"../../routes/mainRouters\";\r\nimport HeaderItem from \"./headerItem/HeaderItem\";\r\n\r\nimport { HeaderConteinerStyled } from \"./HeaderStyled\";\r\n\r\nconst Header = () => {\r\n return (\r\n  <HeaderConteinerStyled>\r\n   <ul className=\"headerConteiner\">\r\n    {mainRoutes.map((route) => (\r\n     <HeaderItem route={route} />\r\n    ))}\r\n   </ul>\r\n  </HeaderConteinerStyled>\r\n );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Section from \"./sectipon/Section\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\nimport Header from \"./header/Header\";\r\n\r\nimport { Switch, Route } from \"react-router\";\r\nimport { mainRoutes } from \"../routes/mainRouters\";\r\n\r\nconst App = () => {\r\n return (\r\n  <>\r\n   <Header />\r\n   <Switch>\r\n    {mainRoutes.map((route) => (\r\n     <Route\r\n      path={route.path}\r\n      exact={route.exact}\r\n      component={route.component}\r\n      rey={route.path}\r\n     />\r\n    ))}\r\n   </Switch>\r\n   {/* \r\n   <Section title={\"Phonebook\"}>\r\n    <ContactForm />\r\n   </Section>\r\n\r\n   <Section title={\"Contacts\"}>\r\n    <Filter />\r\n\r\n    <ContactList />\r\n   </Section> */}\r\n  </>\r\n );\r\n};\r\nexport default App;\r\n","//============================= Redux Toolkit ================================\r\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n getAllContacts,\r\n getAllRequestError,\r\n submitNewContact,\r\n submitNewContactRequestError,\r\n handleDelete,\r\n handleDeleteRequestError,\r\n filterContacts,\r\n setLoader,\r\n} from \"./contactFormActions\";\r\n\r\nconst itemsReducer = createReducer(\r\n [{ id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" }],\r\n {\r\n  [getAllContacts]: (state, action) => [...action.payload],\r\n  [submitNewContact]: (state, action) => [...state, action.payload],\r\n  [handleDelete]: (state, action) =>\r\n   state.filter((contact) => contact.id !== action.payload),\r\n }\r\n);\r\n\r\nconst filterItemsReducer = createReducer(\"\", {\r\n [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nconst loaderReducer = createReducer(false, {\r\n [setLoader]: (state) => !state,\r\n});\r\n\r\nconst errorReducer = createReducer(\r\n {},\r\n {\r\n  [getAllRequestError]: (state, action) => action.payload,\r\n  [submitNewContactRequestError]: (state, action) => action.payload,\r\n  [handleDeleteRequestError]: (state, action) => action.payload,\r\n }\r\n);\r\n\r\nconst contactFormCartReduser = combineReducers({\r\n items: itemsReducer,\r\n filter: filterItemsReducer,\r\n loader: loaderReducer,\r\n error: errorReducer,\r\n});\r\n\r\nexport default contactFormCartReduser;\r\n","import {combineReducers} from 'redux';\r\nimport contactFormReducer from '../redux/contactForm/contactFormReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n contacts: contactFormReducer,\r\n });\r\n\r\nexport default rootReducer;\r\n","//============================= Redux ================================\r\n\r\n// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import rootReducer from \"./rootReducer\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n// export default store;\r\n\r\n//============================= Redux Toolkit ================================\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nconst store = configureStore({ reducer: rootReducer });\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n <React.StrictMode>\n  <Provider store={store}>\n   <BrowserRouter>\n    <App />\n   </BrowserRouter>\n  </Provider>\n </React.StrictMode>,\n document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"ContactForm_mainForm__2lHoC\",\"inputContainer\":\"ContactForm_inputContainer__3g7Wn\",\"labelName\":\"ContactForm_labelName__1WkTr\",\"inputName\":\"ContactForm_inputName__2GaAF\",\"buttonAddContact\":\"ContactForm_buttonAddContact__36VUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactList_mainContainer__1ZI5M\",\"ulContainer\":\"ContactList_ulContainer__23bYC\",\"newContact\":\"ContactList_newContact__2tGyc\",\"newContactName\":\"ContactList_newContactName__2wC29\",\"btn\":\"ContactList_btn__3J3Fg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Filter_mainContainer__1tYtW\",\"inputContainer\":\"Filter_inputContainer__xy6CY\",\"labelName\":\"Filter_labelName__KYNWV\",\"inputName\":\"Filter_inputName__3L-I_\",\"buttonAddContact\":\"Filter_buttonAddContact__xJnOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__2dvSm\"};"],"sourceRoot":""}